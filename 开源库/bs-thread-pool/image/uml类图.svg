<svg aria-roledescription="classDiagram" role="graphics-document document" viewBox="0 0 2756.849609375 2321" style="max-width: 2756.849609375px;" xmlns="http://www.w3.org/2000/svg" width="100%" id="mermaid-svg-1755965021497-lzwvsaq5z"><style>#mermaid-svg-1755965021497-lzwvsaq5z{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:rgba(204, 204, 204, 0.87);}#mermaid-svg-1755965021497-lzwvsaq5z .error-icon{fill:#bf616a;}#mermaid-svg-1755965021497-lzwvsaq5z .error-text{fill:#bf616a;stroke:#bf616a;}#mermaid-svg-1755965021497-lzwvsaq5z .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-1755965021497-lzwvsaq5z .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-1755965021497-lzwvsaq5z .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-1755965021497-lzwvsaq5z .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-1755965021497-lzwvsaq5z .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-1755965021497-lzwvsaq5z .marker{fill:rgba(204, 204, 204, 0.87);stroke:rgba(204, 204, 204, 0.87);}#mermaid-svg-1755965021497-lzwvsaq5z .marker.cross{stroke:rgba(204, 204, 204, 0.87);}#mermaid-svg-1755965021497-lzwvsaq5z svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-1755965021497-lzwvsaq5z g.classGroup text{fill:#2a2a2a;stroke:none;font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:10px;}#mermaid-svg-1755965021497-lzwvsaq5z g.classGroup text .title{font-weight:bolder;}#mermaid-svg-1755965021497-lzwvsaq5z .nodeLabel,#mermaid-svg-1755965021497-lzwvsaq5z .edgeLabel{color:#d8dee9;}#mermaid-svg-1755965021497-lzwvsaq5z .edgeLabel .label rect{fill:#1a1a1a;}#mermaid-svg-1755965021497-lzwvsaq5z .label text{fill:#d8dee9;}#mermaid-svg-1755965021497-lzwvsaq5z .edgeLabel .label span{background:#1a1a1a;}#mermaid-svg-1755965021497-lzwvsaq5z .classTitle{font-weight:bolder;}#mermaid-svg-1755965021497-lzwvsaq5z .node rect,#mermaid-svg-1755965021497-lzwvsaq5z .node circle,#mermaid-svg-1755965021497-lzwvsaq5z .node ellipse,#mermaid-svg-1755965021497-lzwvsaq5z .node polygon,#mermaid-svg-1755965021497-lzwvsaq5z .node path{fill:#1a1a1a;stroke:#2a2a2a;stroke-width:1px;}#mermaid-svg-1755965021497-lzwvsaq5z .divider{stroke:#2a2a2a;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z g.clickable{cursor:pointer;}#mermaid-svg-1755965021497-lzwvsaq5z g.classGroup rect{fill:#1a1a1a;stroke:#2a2a2a;}#mermaid-svg-1755965021497-lzwvsaq5z g.classGroup line{stroke:#2a2a2a;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z .classLabel .box{stroke:none;stroke-width:0;fill:#1a1a1a;opacity:0.5;}#mermaid-svg-1755965021497-lzwvsaq5z .classLabel .label{fill:#2a2a2a;font-size:10px;}#mermaid-svg-1755965021497-lzwvsaq5z .relation{stroke:rgba(204, 204, 204, 0.87);stroke-width:1;fill:none;}#mermaid-svg-1755965021497-lzwvsaq5z .dashed-line{stroke-dasharray:3;}#mermaid-svg-1755965021497-lzwvsaq5z .dotted-line{stroke-dasharray:1 2;}#mermaid-svg-1755965021497-lzwvsaq5z #compositionStart,#mermaid-svg-1755965021497-lzwvsaq5z .composition{fill:rgba(204, 204, 204, 0.87)!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #compositionEnd,#mermaid-svg-1755965021497-lzwvsaq5z .composition{fill:rgba(204, 204, 204, 0.87)!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #dependencyStart,#mermaid-svg-1755965021497-lzwvsaq5z .dependency{fill:rgba(204, 204, 204, 0.87)!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #dependencyStart,#mermaid-svg-1755965021497-lzwvsaq5z .dependency{fill:rgba(204, 204, 204, 0.87)!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #extensionStart,#mermaid-svg-1755965021497-lzwvsaq5z .extension{fill:transparent!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #extensionEnd,#mermaid-svg-1755965021497-lzwvsaq5z .extension{fill:transparent!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #aggregationStart,#mermaid-svg-1755965021497-lzwvsaq5z .aggregation{fill:transparent!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #aggregationEnd,#mermaid-svg-1755965021497-lzwvsaq5z .aggregation{fill:transparent!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #lollipopStart,#mermaid-svg-1755965021497-lzwvsaq5z .lollipop{fill:#1a1a1a!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z #lollipopEnd,#mermaid-svg-1755965021497-lzwvsaq5z .lollipop{fill:#1a1a1a!important;stroke:rgba(204, 204, 204, 0.87)!important;stroke-width:1;}#mermaid-svg-1755965021497-lzwvsaq5z .edgeTerminals{font-size:11px;}#mermaid-svg-1755965021497-lzwvsaq5z .classTitleText{text-anchor:middle;font-size:18px;fill:rgba(204, 204, 204, 0.87);}#mermaid-svg-1755965021497-lzwvsaq5z :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}</style><g><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="18" class="marker aggregation classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-aggregationStart"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="1" class="marker aggregation classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-aggregationEnd"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="18" class="marker extension classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-extensionStart"><path d="M 1,7 L18,13 V 1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="1" class="marker extension classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-extensionEnd"><path d="M 1,1 V 13 L18,7 Z"/></marker></defs><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="18" class="marker composition classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-compositionStart"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="1" class="marker composition classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-compositionEnd"><path d="M 18,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="6" class="marker dependency classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyStart"><path d="M 5,7 L9,13 L1,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="28" markerWidth="20" refY="7" refX="13" class="marker dependency classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyEnd"><path d="M 18,7 L9,13 L14,7 L9,1 Z"/></marker></defs><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="13" class="marker lollipop classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-lollipopStart"><circle r="6" cy="7" cx="7" fill="transparent" stroke="black"/></marker></defs><defs><marker orient="auto" markerHeight="240" markerWidth="190" refY="7" refX="1" class="marker lollipop classDiagram" id="mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-lollipopEnd"><circle r="6" cy="7" cx="7" fill="transparent" stroke="black"/></marker></defs><g class="root"><g class="clusters"/><g class="edgePaths"><path marker-end="url(#mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyEnd)" style="fill:none" class="edge-pattern-solid relation" id="id1" d="M1230,1410.368L1128.394,1492.182C1026.788,1573.995,823.577,1737.623,703.729,1831.873C583.881,1926.123,547.396,1950.997,529.154,1963.433L510.912,1975.87"/><path marker-end="url(#mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyEnd)" style="fill:none" class="edge-pattern-solid relation" id="id2" d="M1243.852,1865L1241.143,1871.042C1238.434,1877.083,1233.016,1889.167,1222.047,1903.101C1211.078,1917.035,1194.559,1932.82,1186.299,1940.712L1178.039,1948.605"/><path marker-end="url(#mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyEnd)" style="fill:none" class="edge-pattern-solid relation" id="id3" d="M1911.484,1435.222L1999.933,1512.894C2088.382,1590.565,2265.28,1745.907,2350.411,1841.886C2435.542,1937.865,2428.905,1974.481,2425.587,1992.788L2422.269,2011.096"/><path marker-end="url(#mermaid-svg-1755965021497-lzwvsaq5z_classDiagram-dependencyEnd)" style="fill:none" class="edge-pattern-solid relation" id="id4" d="M1685.636,1865L1686.589,1871.042C1687.541,1877.083,1689.445,1889.167,1690.397,1900.25C1691.35,1911.333,1691.35,1921.417,1691.35,1926.458L1691.35,1931.5"/><path style="fill:none" class="edge-pattern-dotted relation" id="edgeNote5" d="M1570.742,311.75L1570.742,323.458C1570.742,335.167,1570.742,358.583,1570.742,374.458C1570.742,390.333,1570.742,398.667,1570.742,402.833L1570.742,407"/><path style="fill:none" class="edge-pattern-dotted relation" id="edgeNote6" d="M291.801,1188.5L291.801,1307.292C291.801,1426.083,291.801,1663.667,291.801,1795.458C291.801,1927.25,291.801,1953.25,291.801,1966.25L291.801,1979.25"/><path style="fill:none" class="edge-pattern-dotted relation" id="edgeNote7" d="M528.93,1188.5L562.687,1307.292C596.444,1426.083,663.957,1663.667,707.742,1791.042C751.527,1918.417,771.583,1935.583,781.611,1944.167L791.639,1952.75"/><path style="fill:none" class="edge-pattern-dotted relation" id="edgeNote8" d="M2393.574,1188.5L2375.46,1307.292C2357.346,1426.083,2321.117,1663.667,2313.053,1801.75C2304.988,1939.833,2325.088,1978.417,2335.138,1997.708L2345.188,2017"/></g><g class="edgeLabels"><g transform="translate(620.365234375, 1901.25)" class="edgeLabel"><g transform="translate(-68.48828125, -11.25)" class="label"><foreignObject height="22.5" width="136.9765625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"><span class="edgeLabel">"submit_*方法返回"</span></span></div></foreignObject></g></g><g transform="translate(1227.59765625, 1901.25)" class="edgeLabel"><g transform="translate(-127.15625, -11.25)" class="label"><foreignObject height="22.5" width="254.3125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"><span class="edgeLabel">"detach_blocks/submit_blocks使用"</span></span></div></foreignObject></g></g><g transform="translate(2442.177734375, 1901.25)" class="edgeLabel"><g transform="translate(-61.1953125, -11.25)" class="label"><foreignObject height="22.5" width="122.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"><span class="edgeLabel">"优先级队列存储"</span></span></div></foreignObject></g></g><g transform="translate(1691.349609375, 1901.25)" class="edgeLabel"><g transform="translate(-94.05859375, -11.25)" class="label"><foreignObject height="22.5" width="188.1171875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"><span class="edgeLabel">"worker函数设置线程信息"</span></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g><g class="edgeLabel"><g transform="translate(0, 0)" class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="edgeLabel"></span></div></foreignObject></g></g></g><g class="nodes"><g transform="translate(1570.7421875, 1136)" id="classId-thread_pool-30" class="node default"><rect height="1458" width="681.484375" y="-729" x="-340.7421875" class="outer title-state"/><line y2="-676" y1="-676" x2="340.7421875" x1="-340.7421875" class="divider"/><line y2="-342" y1="-342" x2="340.7421875" x1="-340.7421875" class="divider"/><g class="label"><foreignObject transform="translate( -74.56640625, -721.5)" height="18.5" width="149.1328125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">«template OptFlags»</span></div></foreignObject><foreignObject transform="translate( -45.59765625, -699)" height="18.5" width="91.1953125" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">thread_pool</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -664.5)" height="22.5" width="441.703125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+static constexpr bool priority_enabled "是否启用任务优先级"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -638)" height="22.5" width="413.671875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+static constexpr bool pause_enabled "是否启用暂停功能"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -611.5)" height="22.5" width="564.5234375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+static constexpr bool wait_deadlock_checks_enabled "是否启用等待死锁检查"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -585)" height="22.5" width="362.890625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-bool paused "暂停标志，控制线程是否暂停取任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -558.5)" height="22.5" width="592.4921875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::condition_variable_any task_available_cv "条件变量，通知工作线程有新任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -532)" height="22.5" width="519.8125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::condition_variable tasks_done_cv "条件变量，通知等待者任务完成"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -505.5)" height="22.5" width="666.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::queue&lt;task_t&lt; | std::priority_queue&gt;pr_task&gt; tasks "任务队列，普通队列或优先级队列"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -479)" height="22.5" width="497.7265625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-mutable std::mutex tasks_mutex "互斥锁，保护任务队列的并发访问"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -452.5)" height="22.5" width="375.4296875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::size_t tasks_running "当前正在运行的任务数量"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -426)" height="22.5" width="341.5625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::size_t thread_count "线程池中的线程数量"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -399.5)" height="22.5" width="490.1328125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::unique_ptr&lt;thread_t[]&gt; threads "线程数组，管理所有工作线程"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -373)" height="22.5" width="381.265625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-bool waiting "标志，指示是否有线程在等待任务完成"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -334.5)" height="22.5" width="537.6015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-function_t~void(std::size_t) : ~ cleanup_func "清理函数，线程销毁前调用"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -308)" height="22.5" width="521.640625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-function_t~void(std::size_t) : ~ init_func "初始化函数，线程创建后调用"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -281.5)" height="22.5" width="485.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-bool workers_running "标志，控制工作线程是否继续运行(C++17) : "</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -255)" height="22.5" width="388.59375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+thread_pool() : "默认构造，使用硬件并发数创建线程"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -228.5)" height="22.5" width="423.8515625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+thread_pool(num_threads: std::size_t) : "指定线程数构造"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -202)" height="22.5" width="342.4921875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+thread_pool(init: F&amp;&amp;) : "指定初始化函数构造"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -175.5)" height="22.5" width="596.4453125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+thread_pool(num_threads: std::size_t, init: F&amp;&amp;) : "指定线程数和初始化函数构造"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -149)" height="22.5" width="396.984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+~thread_pool() : "析构，等待所有任务完成并清理资源"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -122.5)" height="22.5" width="456.5234375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+detach_blocks(...) : void "并行化循环，按块处理，不返回结果"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -96)" height="22.5" width="458.640625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+detach_loop(...) : void "并行化循环，按索引处理，不返回结果"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -69.5)" height="22.5" width="446.8125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+detach_sequence(...) : void "提交索引序列任务，不返回结果"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -43)" height="22.5" width="573.2109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+detach_task(task: F&amp;&amp;, priority: priority_t) : void "提交单个任务，不返回结果"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, -16.5)" height="22.5" width="585.4375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+submit_blocks(...) : multi_future&lt;R&gt; "并行化循环，按块处理，返回multi_future"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 10)" height="22.5" width="608.140625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+submit_loop(...) : multi_future&lt;void&gt; "并行化循环，按索引处理，返回multi_future"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 36.5)" height="22.5" width="575.7265625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+submit_sequence(...) : multi_future&lt;R&gt; "提交索引序列任务，返回multi_future"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 63)" height="22.5" width="643.53125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+submit_task(task: F&amp;&amp;, priority: priority_t) : std::future&lt;R&gt; "提交单个任务，返回future"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 89.5)" height="22.5" width="479.6171875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_native_handles() : std::vector&lt;...&gt; "获取所有线程的原生句柄"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 116)" height="22.5" width="430.8671875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_tasks_queued() : std::size_t "获取队列中等待的任务数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 142.5)" height="22.5" width="415.8828125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_tasks_running() : std::size_t "获取正在运行的任务数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 169)" height="22.5" width="436.890625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_tasks_total() : std::size_t "获取总任务数（队列+运行）"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 195.5)" height="22.5" width="414.015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_thread_count() : std::size_t "获取线程池中的线程数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 222)" height="22.5" width="397.84375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_thread_ids() : std::vector&lt;...&gt; "获取所有线程的ID"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 248.5)" height="22.5" width="311.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+is_paused() : bool "检查线程池是否被暂停"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 275)" height="22.5" width="330.03125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+pause() : void "暂停线程池，停止处理新任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 301.5)" height="22.5" width="331.515625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+unpause() : void "恢复线程池，继续处理任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 328)" height="22.5" width="377.3984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+purge() : void "清空任务队列，丢弃所有等待的任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 354.5)" height="22.5" width="245.2578125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+reset() : void "重置为默认线程数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 381)" height="22.5" width="424.515625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+reset(num_threads: std::size_t) : void "重置为指定线程数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 407.5)" height="22.5" width="375.15625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+reset(init: F&amp;&amp;) : void "重置并设置新的初始化函数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 434)" height="22.5" width="549.109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+reset(num_threads: std::size_t, init: F&amp;&amp;) : void "重置线程数和初始化函数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 460.5)" height="22.5" width="432.4453125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+set_cleanup_func(cleanup: F&amp;&amp;) : void "设置线程清理函数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 487)" height="22.5" width="239.984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait() : void "等待所有任务完成"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 513.5)" height="22.5" width="438.8359375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait_for(duration: ...) : bool "等待指定时间，返回是否完成"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 540)" height="22.5" width="520.6015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait_until(timeout_time: ...) : bool "等待到指定时间点，返回是否完成"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 566.5)" height="22.5" width="538.6640625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-create_threads(num_threads: std::size_t, init: F&amp;&amp;) : void "创建工作线程"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 593)" height="22.5" width="381.328125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-destroy_threads() void "销毁所有工作线程(C++17) : "</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 619.5)" height="22.5" width="641.8984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-determine_thread_count(num_threads: std::size_t) : std::size_t "确定实际使用的线程数"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 646)" height="22.5" width="316.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-pop_task() : task_t "从队列中弹出一个任务"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 672.5)" height="22.5" width="569.7890625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-reset_pool(num_threads: std::size_t, init: F&amp;&amp;) : void "重置线程池的内部实现"</span></div></foreignObject><foreignObject transform="translate( -333.2421875, 699)" height="22.5" width="513.9375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-worker(stop_token: ..., idx: std::size_t) : void "工作线程的主循环函数"</span></div></foreignObject></g></g><g transform="translate(291.80078125, 2125.25)" id="classId-multi_future-31" class="node default"><rect height="292" width="567.6015625" y="-146" x="-283.80078125" class="outer title-state"/><line y2="-93" y1="-93" x2="283.80078125" x1="-283.80078125" class="divider"/><line y2="-24" y1="-24" x2="283.80078125" x1="-283.80078125" class="divider"/><g class="label"><foreignObject transform="translate( -48.03125, -138.5)" height="18.5" width="96.0625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">«template T»</span></div></foreignObject><foreignObject transform="translate( -47.8046875, -116)" height="18.5" width="95.609375" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">multi_future</span></div></foreignObject><foreignObject transform="translate( -276.30078125, -81.5)" height="22.5" width="150.71875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"继承自 std::vector&gt;"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, -55)" height="22.5" width="199.078125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"用于管理多个future的集合"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, -16.5)" height="22.5" width="500.8984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get() : std::conditional_t&lt;...&gt; "获取所有future的结果，void或vector"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, 10)" height="22.5" width="404.015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+ready_count() : std::size_t "返回已准备好的future数量"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, 36.5)" height="22.5" width="288.796875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+valid() : bool "检查所有future是否有效"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, 63)" height="22.5" width="252.671875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait() : void "等待所有future完成"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, 89.5)" height="22.5" width="470.8359375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait_for(duration: ...) : bool "等待指定时间，返回是否全部完成"</span></div></foreignObject><foreignObject transform="translate( -276.30078125, 116)" height="22.5" width="552.6015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+wait_until(timeout_time: ...) : bool "等待到指定时间点，返回是否全部完成"</span></div></foreignObject></g></g><g transform="translate(993.173828125, 2125.25)" id="classId-blocks-32" class="node default"><rect height="345" width="646.65625" y="-172.5" x="-323.328125" class="outer title-state"/><line y2="-119.5" y1="-119.5" x2="323.328125" x1="-323.328125" class="divider"/><line y2="55.5" y1="55.5" x2="323.328125" x1="-323.328125" class="divider"/><g class="label"><foreignObject transform="translate( -48.03125, -165)" height="18.5" width="96.0625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">«template T»</span></div></foreignObject><foreignObject transform="translate( -23.4609375, -142.5)" height="18.5" width="46.921875" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">blocks</span></div></foreignObject><foreignObject transform="translate( -315.828125, -108)" height="22.5" width="250.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"用于将范围分割成块进行并行处理"</span></div></foreignObject><foreignObject transform="translate( -315.828125, -81.5)" height="22.5" width="271.4453125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::size_t block_size "每个块的大小"</span></div></foreignObject><foreignObject transform="translate( -315.828125, -55)" height="22.5" width="239.7734375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-T first_index "范围的第一个索引"</span></div></foreignObject><foreignObject transform="translate( -315.828125, -28.5)" height="22.5" width="344.203125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-T index_after_last "范围最后一个索引的下一个"</span></div></foreignObject><foreignObject transform="translate( -315.828125, -2)" height="22.5" width="281.328125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::size_t num_blocks "实际的块数量"</span></div></foreignObject><foreignObject transform="translate( -315.828125, 24.5)" height="22.5" width="271.28125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::size_t remainder "分割后的余数"</span></div></foreignObject><foreignObject transform="translate( -315.828125, 63)" height="22.5" width="631.65625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+blocks(first_index_: T, index_after_last_: T, num_blocks_: std::size_t) : "构造块分割器"</span></div></foreignObject><foreignObject transform="translate( -315.828125, 89.5)" height="22.5" width="370.4453125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+end(block: std::size_t) : T "获取指定块的结束索引"</span></div></foreignObject><foreignObject transform="translate( -315.828125, 116)" height="22.5" width="369.78125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_num_blocks() : std::size_t "获取实际的块数量"</span></div></foreignObject><foreignObject transform="translate( -315.828125, 142.5)" height="22.5" width="377.8515625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+start(block: std::size_t) : T "获取指定块的开始索引"</span></div></foreignObject></g></g><g transform="translate(2401.580078125, 2125.25)" id="classId-pr_task-33" class="node default"><rect height="216.5" width="694.5390625" y="-108.25" x="-347.26953125" class="outer title-state"/><line y2="-77.75" y1="-77.75" x2="347.26953125" x1="-347.26953125" class="divider"/><line y2="44.25" y1="44.25" x2="347.26953125" x1="-347.26953125" class="divider"/><g class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel"></span></div></foreignObject><foreignObject transform="translate( -28.02734375, -100.75)" height="18.5" width="56.0546875" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">pr_task</span></div></foreignObject><foreignObject transform="translate( -339.76953125, -66.25)" height="22.5" width="170.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"带优先级的任务包装器"</span></div></foreignObject><foreignObject transform="translate( -339.76953125, -39.75)" height="22.5" width="218.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"用于优先级队列中的任务存储"</span></div></foreignObject><foreignObject transform="translate( -339.76953125, -13.25)" height="22.5" width="261.75"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+task_t task "实际要执行的任务函数"</span></div></foreignObject><foreignObject transform="translate( -339.76953125, 13.25)" height="22.5" width="358.359375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+priority_t priority "任务的优先级（-128到+127）"</span></div></foreignObject><foreignObject transform="translate( -339.76953125, 51.75)" height="22.5" width="476.984375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+pr_task(task_: task_t&amp;&amp;, priority_: priority_t) : "构造优先级任务"</span></div></foreignObject><foreignObject transform="translate( -339.76953125, 78.25)" height="22.5" width="679.5390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+operator&lt;(lhs: const pr_task&amp;, rhs: const pr_task&amp;) : bool "比较优先级，用于优先级队列排序"</span></div></foreignObject></g></g><g transform="translate(1691.349609375, 2125.25)" id="classId-this_thread-34" class="node default"><rect height="375.5" width="625.921875" y="-187.75" x="-312.9609375" class="outer title-state"/><line y2="-157.25" y1="-157.25" x2="312.9609375" x1="-312.9609375" class="divider"/><line y2="-35.25" y1="-35.25" x2="312.9609375" x1="-312.9609375" class="divider"/><g class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel"></span></div></foreignObject><foreignObject transform="translate( -43.26953125, -180.25)" height="18.5" width="86.5390625" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">this_thread</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -145.75)" height="22.5" width="266.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"提供当前线程信息和操作系统级控制"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -119.25)" height="22.5" width="260.484375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"使用thread_local存储线程特定信息"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -92.75)" height="22.5" width="610.921875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-static thread_local std::optional&lt;std::size_t&gt; my_index "当前线程在线程池中的索引"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -66.25)" height="22.5" width="562.9609375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-static thread_local std::optional&lt;void*&gt; my_pool "当前线程所属的线程池指针"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -27.75)" height="22.5" width="434.0234375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_index() : std::optional&lt;std::size_t&gt; "获取当前线程索引"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, -1.25)" height="22.5" width="434.0625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_pool() : std::optional&lt;void*&gt; "获取当前线程所属线程池"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 25.25)" height="22.5" width="481.5078125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_os_thread_affinity() : std::optional&lt;...&gt; "获取线程CPU亲和性"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 51.75)" height="22.5" width="464.6640625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+set_os_thread_affinity(affinity: ...) : bool "设置线程CPU亲和性"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 78.25)" height="22.5" width="479.6953125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_os_thread_name() : std::optional&lt;std::string&gt; "获取线程名称"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 104.75)" height="22.5" width="393.4375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+set_os_thread_name(name: ...) : bool "设置线程名称"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 131.25)" height="22.5" width="453.6015625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_os_thread_priority() : std::optional&lt;...&gt; "获取线程优先级"</span></div></foreignObject><foreignObject transform="translate( -305.4609375, 157.75)" height="22.5" width="437.71875"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+set_os_thread_priority(priority: ...) : bool "设置线程优先级"</span></div></foreignObject></g></g><g transform="translate(1138.375, 182.5)" id="classId-synced_stream-35" class="node default"><rect height="349" width="469.8828125" y="-174.5" x="-234.94140625" class="outer title-state"/><line y2="-144" y1="-144" x2="234.94140625" x1="-234.94140625" class="divider"/><line y2="-22" y1="-22" x2="234.94140625" x1="-234.94140625" class="divider"/><g class="label"><foreignObject height="0" width="0"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel"></span></div></foreignObject><foreignObject transform="translate( -56.23046875, -167)" height="18.5" width="112.4609375" class="classTitle"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">synced_stream</span></div></foreignObject><foreignObject transform="translate( -227.44140625, -132.5)" height="22.5" width="186.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"线程安全的输出流包装器"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, -106)" height="22.5" width="218.390625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">"用于多线程环境下的同步打印"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, -79.5)" height="22.5" width="435.1953125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-std::vector&lt;std::ostream*&gt; out_streams "要输出到的流列表"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, -53)" height="22.5" width="431.40625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">-mutable std::mutex stream_mutex "保护输出操作的互斥锁"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, -14.5)" height="22.5" width="345.640625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+synced_stream() : "默认构造，输出到std::cout"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 12)" height="22.5" width="385.109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+synced_stream(streams: T&amp;...) : "构造并指定输出流"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 38.5)" height="22.5" width="407.8125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+add_stream(stream: std::ostream&amp;) : void "添加输出流"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 65)" height="22.5" width="454.8828125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+get_streams() : std::vector&lt;std::ostream*&gt;&amp; "获取输出流列表"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 91.5)" height="22.5" width="342.4453125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+print(items: const T&amp;...) : void "线程安全打印"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 118)" height="22.5" width="372.3125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+println(items: T&amp;&amp;...) : void "线程安全打印并换行"</span></div></foreignObject><foreignObject transform="translate( -227.44140625, 144.5)" height="22.5" width="434.953125"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">+remove_stream(stream: std::ostream&amp;) : void "移除输出流"</span></div></foreignObject></g></g><g transform="translate(1570.7421875, 182.5)" id="note0" class="node undefined"><rect height="258.5" width="294.8515625" y="-129.25" x="-147.42578125" ry="0" rx="0"/><g transform="translate(-139.92578125, -121.75)" style="" class="label"><rect/><foreignObject height="243.5" width="279.8515625"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">核心线程池类<br />OptFlags控制功能:<br />• tp::priority - 任务优先级<br />• tp::pause - 暂停功能<br />• tp::wait_deadlock_checks - 死锁检查<br /><br />工作流程:<br />1. 创建工作线程<br />2. 工作线程循环等待任务<br />3. 从队列取任务执行<br />4. 通知等待者任务完成</span></div></foreignObject></g></g><g transform="translate(291.80078125, 1136)" id="note1" class="node undefined"><rect height="105" width="188.2109375" y="-52.5" x="-94.10546875" ry="0" rx="0"/><g transform="translate(-86.60546875, -45)" style="" class="label"><rect/><foreignObject height="90" width="173.2109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">多future管理器<br />• 批量等待多个异步任务<br />• 统一获取所有结果<br />• 检查完成状态</span></div></foreignObject></g></g><g transform="translate(514.01171875, 1136)" id="note2" class="node undefined"><rect height="105" width="156.2109375" y="-52.5" x="-78.10546875" ry="0" rx="0"/><g transform="translate(-70.60546875, -45)" style="" class="label"><rect/><foreignObject height="90" width="141.2109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">范围分割工具<br />• 将大范围分成小块<br />• 支持负载均衡<br />• 用于并行循环处理</span></div></foreignObject></g></g><g transform="translate(2401.580078125, 1136)" id="note3" class="node undefined"><rect height="105" width="172.2109375" y="-52.5" x="-86.10546875" ry="0" rx="0"/><g transform="translate(-78.60546875, -45)" style="" class="label"><rect/><foreignObject height="90" width="157.2109375"><div style="display: inline-block; white-space: nowrap;" xmlns="http://www.w3.org/1999/xhtml"><span class="nodeLabel">优先级任务容器<br />• 包装任务和优先级<br />• 支持优先级队列排序<br />• 高优先级先执行</span></div></foreignObject></g></g></g></g></g></svg>